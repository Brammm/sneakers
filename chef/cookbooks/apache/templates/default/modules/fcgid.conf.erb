#SQUEEZE like a pig

<IfModule mod_fcgid.c>
  AddHandler fcgid-script .fcgi
  SocketPath /var/lib/apache2/fcgid/sock


  #An idle fastcgi application will be terminated after IdleTimeout seconds.
  IdleTimeout <%= node[:apache][:fcgid][:IdleTimeout] %>
  #The scan interval for idle fastcgi applications.
  IdleScanInterval <%= node[:apache][:fcgid][:IdleScanInterval] %>
  #The scan interval for exit pending fastcgi applications. fastcgi applications will be terminated within this scanning.
  ErrorScanInterval <%= node[:apache][:fcgid][:ErrorScanInterval] %>
  #A fastcgi application will be terminated if lifetime expired, even no error is detected.
  ProcessLifeTime <%= node[:apache][:fcgid][:ProcessLifeTime] %>

#SpawnScoreUpLimit n (10)
#
#The spawn-speed control score up water limit. Score increases while a process
#is spawned or terminated, and decreases as time progresses; while the score is
#higher than SpawnScoreUpLimit, the spawning will be held for a while. The
#higher this number is, the higher speed of the spawning can be.  #

#SpawnScore n (1)
#
#The weight of spawning.  This weight will be plused to the spawn-control score
#on every spawn. The higher this number is, the lower speed of spawning can be.
#
#TerminationScore n (2)
#
#The weight of termination. This weight will be plused to the score while
#fastcgi process terminates. The higher this number is, the lower speed of
#spawning can be.  #

  MaxProcessCount <%= node[:apache][:fcgid][:MaxProcessCount] %>
# The max count of total fastcgi process count.

  DefaultMaxClassProcessCount <%= node[:apache][:fcgid][:DefaultMaxClassProcessCount] %>
# The maximum number of fastcgi application instances allowed to run for any one fastcgi application.


#  DefaultMinClassProcessCount 1
# The minimum number of fastcgi application instances for any one fastcgi application.






  #IPCConnectTimeout 20
  IPCConnectTimeout <%= node[:apache][:fcgid][:IPCConnectTimeout] %>
#The connect timeout to a fastcgi application.


  IPCCommTimeout <%= node[:apache][:fcgid][:IPCCommTimeout] %>
#The communication timeout to a fastcgi application. Please increase this value if your CGI have a slow initialization or slow respond.

<% if node['lsb']['codename'] == "lenny" %>
MaxRequestsPerProcess <%= node[:apache][:fcgid][:FcgidMaxRequestsPerProcess] %>
<% else %>
FcgidMaxRequestsPerProcess <%= node[:apache][:fcgid][:FcgidMaxRequestsPerProcess] %>
<% end %>

#(Added in version 1.11, patch from Robert L Mathews)

#Adds a MaxRequestsPerProcess parameter that allows mod_fcgid to exit after
#handling a certain number of requests, similar to the existing ProcessLifeTime
#option.

#This solves a problem with PHP in FastCGI mode. By default, PHP stops accepting
#new FastCGI connections after handling 500 requests; unfortunately, there is a
#potential race condition during the PHP cleanup code in which PHP can be
#shutting down but still have the socket open, so mod_fcgid under heavy load can
#send request number 501 to PHP and have it "accepted", but then PHP appears to
#simply exit, causing errors.

#If you are using PHP, you should set it to 500. -1 mean fastcgi process will not exit no matter how many requests it has handled.

MaxRequestLen <%= node[:apache][:fcgid][:MaxRequestLen] %>

</IfModule>
AddHandler fcgid-script .fcgi

<Location /cgi-site/>
  SetHandler fcgid-script
  Options ExecCGI
  Allow from all
</Location>
